.comp 920 000111010010000
.start __HW2_Start
.depend "_SystemEnumStrict" "20211222162233"
.depend "_SystemStrictLists" "20211222162233"
.depend "StdStrictLists" "20211222162231"
.depend "_SystemEnum" "20211222162228"
.depend "StdEnum" "20211222162231"
.depend "StdMisc" "20211222162231"
.depend "StdFunctions" "20211222162231"
.depend "StdCharList" "20211222162235"
.depend "StdTuple" "20211222162233"
.depend "StdOrdList" "20211222162235"
.depend "StdList" "20211222162231"
.depend "StdClass" "20211222162233"
.depend "StdFile" "20211222162231"
.depend "StdString" "20211222162235"
.depend "_SystemArray" "20211222162231"
.depend "StdArray" "20211222162233"
.depend "StdChar" "20211222162228"
.depend "StdReal" "20211222162231"
.depend "StdInt" "20211222162231"
.depend "StdOverloaded" "20211222162231"
.depend "StdBool" "20211222162231"
.depend "StdEnv" "20211222162231"
.module m_HW2 "HW2" "20230327170517"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.impdesc e_StdList_d++
.implab e_StdList_s++
.implab e_StdList_n++ e_StdList_ea++
.impmod StdReal
.impdesc e_StdReal_d+;1
.implab e_StdReal_n+;1
.implab e_StdReal_s<;12
.impmod StdBool
.implab e_StdBool_snot
.export __HW2_Start
.o 0 0
__HW2_Start
	build _ 0 n5
.d 1 0
	jmp _driver
.n 0 _ ea5
.o 1 0
n5
	push_node _cycle_in_spine 0
.o 1 0
ea5
.o 1 0
s5
	buildh _Nil 0
	buildR -7.0
	buildh _Cons 2
	buildR -4.0
	buildh _Cons 2
	buildR 8.0
	buildh _Cons 2
	buildR 2.0
	buildh _Cons 2
	build _ 1 n3
	buildh _Nil 0
	buildR -7.0
	buildh _Cons 2
	buildR -4.0
	buildh _Cons 2
	buildR 8.0
	buildh _Cons 2
	buildR 2.0
	buildh _Cons 2
	build _ 1 n4
	build e_StdList_d++ 2 e_StdList_n++
	buildh _Nil 0
	buildR -7.0
	buildh _Cons 2
	buildR -4.0
	buildh _Cons 2
	buildR 8.0
	buildh _Cons 2
	buildR 2.0
	buildh _Cons 2
	build _ 1 n2
	build e_StdList_d++ 2 e_StdList_n++
	buildh _Nil 0
	buildR -7.0
	buildh _Cons 2
	buildR -4.0
	buildh _Cons 2
	buildR 8.0
	buildh _Cons 2
	buildR 2.0
	buildh _Cons 2
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr s1
.o 1 0
.d 3 0
	jmp e_StdList_s++
.o 2 0
s1
	eq_desc _Cons 2 0
	jmp_true case.1
	jmp s1.1
case.1
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.2
	pop_a 1
	jmp s1.1
case.2
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.3
	pop_a 3
	jmp s1.1
case.3
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.4
	pop_a 5
	jmp s1.1
case.4
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.5
	pop_a 7
	jmp s1.1
case.5
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.6
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.6
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.6
	pushR 0.0
	pushR_a 2
	ltR
	notB
	jmp_false else.8
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	jmp_false else.8
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.8
	pushR 0.0
	pushR_a 2
	ltR
	jmp_false else.10
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.10
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.10
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
s1.1
	pop_a 2
	pushD m_HW2
	pushD x_1
.d 0 2 ii
	jmp _match_error
.string x_1 "topLeft"
.n 1 _ ea2
.o 1 0
n2
	push_node _cycle_in_spine 1
.o 2 0
ea2
.o 2 0
s2
	eq_desc _Cons 2 0
	jmp_true case.12
	jmp s2.1
case.12
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.13
	pop_a 1
	jmp s2.1
case.13
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.14
	pop_a 3
	jmp s2.1
case.14
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.15
	pop_a 5
	jmp s2.1
case.15
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.16
	pop_a 7
	jmp s2.1
case.16
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.17
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.17
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.17
	pushR 0.0
	pushR_a 2
	ltR
	notB
	jmp_false else.19
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	jmp_false else.19
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.19
	pushR 0.0
	pushR_a 2
	ltR
	jmp_false else.21
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.21
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.21
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
s2.1
	pop_a 2
	pushD m_HW2
	pushD x_2
.d 0 2 ii
	jmp _match_error
.string x_2 "topRight"
.n 1 _ ea4
.o 1 0
n4
	push_node _cycle_in_spine 1
.o 2 0
ea4
.o 2 0
s4
	eq_desc _Cons 2 0
	jmp_true case.23
	jmp s4.1
case.23
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.24
	pop_a 1
	jmp s4.1
case.24
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.25
	pop_a 3
	jmp s4.1
case.25
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.26
	pop_a 5
	jmp s4.1
case.26
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.27
	pop_a 7
	jmp s4.1
case.27
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.28
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.28
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.28
	pushR 0.0
	pushR_a 2
	ltR
	notB
	jmp_false else.30
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	jmp_false else.30
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.30
	pushR 0.0
	pushR_a 2
	ltR
	jmp_false else.32
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.32
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.32
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
s4.1
	pop_a 2
	pushD m_HW2
	pushD x_4
.d 0 2 ii
	jmp _match_error
.string x_4 "bottomLeft"
.n 1 _ ea3
.o 1 0
n3
	push_node _cycle_in_spine 1
.o 2 0
ea3
.o 2 0
s3
	eq_desc _Cons 2 0
	jmp_true case.34
	jmp s3.1
case.34
	repl_args 2 2
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.35
	pop_a 1
	jmp s3.1
case.35
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.36
	pop_a 3
	jmp s3.1
case.36
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Cons 2 1
	jmp_true case.37
	pop_a 5
	jmp s3.1
case.37
	push_args 1 2 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
	jsr_eval 1
	eq_desc _Nil 0 1
	jmp_true case.38
	pop_a 7
	jmp s3.1
case.38
	push_a 2
	jsr_eval 0
	pushR_a 3
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.39
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.39
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.39
	pushR 0.0
	pushR_a 2
	ltR
	notB
	jmp_false else.41
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	jmp_false else.41
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 3
	push_a 8
	build _ 2 e_StdReal_n+;1
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.41
	pushR 0.0
	pushR_a 2
	ltR
	jmp_false else.43
	push_a 0
	jsr_eval 0
	pushR_a 1
	pop_a 1
	pushR 0.0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	ltR
	notB
	jmp_false else.43
	buildh _Nil 0
	push_a 5
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
else.43
	buildh _Nil 0
	push_a 1
	push_a 6
	build _ 2 e_StdReal_n+;1
	buildh _Cons 2
	push_a 7
	fillh _Cons 2 10
	pop_a 8
.d 1 0
	rtn
s3.1
	pop_a 2
	pushD m_HW2
	pushD x_3
.d 0 2 ii
	jmp _match_error
.string x_3 "bottomRight"
.impmod _system
.implab _match_error
